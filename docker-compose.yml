#
# Message in A bottle Docker Compose file
#

version: "3.6"

services:
  db_lottery:
    image: postgres:13
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      # this is only for development purpose
      - "5342:5342"
    env_file:
      - env_file

  mib_lottery:
    <<:
      # Building the image
      &mib_lottery
      image: "mib-lottery:latest"
      volumes:
        - .:/app
      build:
        context: .
        dockerfile: Dockerfile
      env_file:
        - env_file

    ports:
      - "5002:5002"
    env_file:
      - env_file
    environment:
      - POSTGRES_HOST=db_lottery
      - BROKER_URL=redis://redis_lottery
      - RESULT_BACKEND=redis://redis_lottery
    depends_on:
      - db_lottery
      - redis_lottery
      - migrations_lottery

  redis_lottery:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    expose:
      - "6379"

  migrations_lottery:
    #
    # this service is used to apply migrations on db
    #
    <<: *mib_lottery
    command: flask db upgrade
    env_file:
      - env_file
    environment:
      - POSTGRES_HOST=db_lottery
    restart: on-failure
    depends_on:
      - db_lottery

  celery_worker_lottery:
    <<: *mib_lottery
    command:
      [
        'celery',
        '-A',
        'swagger_server.background',
        'worker',
        '--loglevel=INFO'
      ]
    env_file:
      - env_file
    environment:
      - POSTGRES_HOST=db_lottery
      - BROKER_URL=redis://redis_lottery
      - RESULT_BACKEND=redis://redis_lottery
    depends_on:
      - db_lottery
      - redis_lottery

  celery_beat_lottery:
    <<: *mib_lottery
    command:
      [
        'celery',
        '-A',
        'swagger_server.background',
        'beat',
        '--loglevel=INFO'
      ]
    env_file:
      - env_file
    environment:
      - POSTGRES_HOST=db_lottery
      - BROKER_URL=redis://redis_lottery
      - RESULT_BACKEND=redis://redis_lottery
    depends_on:
      - db_lottery
      - redis_lottery

# Declaring all volumes
volumes:
  pgdata: null # for maintaing db data
